name: Tontine

on:
  push:
    branches: [ "main" ]
  workflow_dispatch:

jobs:
  create-folder:
    name: create-folder
    runs-on: ubuntu-latest
    steps:
    - name: Create folder on Virtual Machine
      uses: appleboy/ssh-action@v1
      with:
        username: chillo
        host: ${{ secrets.HOST }} 
        key: ${{ secrets.PRIVATE_KEY }}
        port: ${{ secrets.PORT }}
        script: mkdir -p /home/chillo/application/tontine

  build:
    name: build
    runs-on: ubuntu-latest
    needs: create-folder
    #------------------------------------------------
    services:
      postgres:
        image: postgres:16
        ports:
          - 5433:5432
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: ${{ secrets.DB_PASSWORD }} 
          POSTGRES_DB: tontine
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
    #------------------------------------------------
    steps:
      - name: Cloner le dépôt
        uses: actions/checkout@v4

      - name: Configurer Java
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '21'
          cache: maven
      - name: Build with maven
        run: mvn -D maven.test.skip=true -B package --file pom.xml
      - name: Rename Jar
        run: mv target/*.jar target/tontine.jar
      - name: copy the file with rsa password
        uses: appleboy/scp-action@v1
        with:
          username: chillo
          host: ${{ secrets.HOST }} 
          key: ${{ secrets.PRIVATE_KEY }}
          port: ${{ secrets.PORT }}
          source: "target/tontine.jar"
          target: /home/chillo/application/tontine
          strip_components: 1
        #------------------------------------------------
      - name: Install PostgreSQL
        run: sudo apt-get install postgresql-client -y

      - name: Attendre que PostgreSQL soit prêt
        env:
          PGPASSWORD: ${{ secrets.DB_PASSWORD }} 
        run: |
          psql -h localhost -p 5433 -U postgres -d tontine -f src/main/resources/init.sql;
      - name: Exécuter les tests
        env:
          SPRING_DATASOURCE_URL: jdbc:postgresql://localhost:5433/tontine?currentSchema=global_schema
          SPRING_DATASOURCE_USERNAME: postgres
          SPRING_DATASOURCE_PASSWORD: ${{ secrets.DB_PASSWORD }} 
        run: mvn -D maven.test.skip=true clean package
        #------------------------------------------------

  run-jar:
    name: run-jar
    runs-on: ubuntu-latest
    needs: build
    steps:
    - name: Run Jar
      uses: appleboy/ssh-action@v1
      with:
        username: chillo
        host: ${{ secrets.HOST }} 
        key: ${{ secrets.PRIVATE_KEY }}
        port: ${{ secrets.PORT }}
        script: |
          ln -sf /home/chillo/application/tontine.jar /etc/init.d/tontine
          /etc/init.d/tontine start

  run-script:
    name: run-script
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Run Script
        uses: appleboy/ssh-action@v1
        with:
          username: chillo
          host: ${{ secrets.HOST }} 
          key: ${{ secrets.PRIVATE_KEY }}
          port: ${{ secrets.PORT }}
          script: |
            ln -sf /home/chillo/application/tontine.jar /etc/init.d/tontine
            service start tontine

      # - name: sssss
      #   run: mvn spring-boot:run
